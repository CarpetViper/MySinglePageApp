{"version":3,"sources":["components/ui/content/articles/articles.module.css","components/ui/content/images/images.module.css","components/ui/navbar/navbar.module.css","components/description/description.module.css","components/description/description.jsx","components/redux/reducers/articlesReducer.js","components/ui/content/articles/articles.jsx","components/ui/content/articles/articlesContainer.jsx","components/redux/reducers/imagesReducer.js","components/ui/content/images/images.jsx","components/ui/content/images/imagesContainer.jsx","components/ui/content/content.jsx","components/ui/navbar/navbar.jsx","App.js","components/redux/redux-store.js","index.js"],"names":["module","exports","Description","className","styles","description__row","description__cell","POST_ARTICLE","UPDATE_NEW_POST_ARTICLE","DELETE_ARTICLE","initialState","postArticles","newPostArticle","ArticlesReducer","state","action","type","newPost","id","Date","getTime","article","newArticle","filter","el","deleteArticle","Articles","props","useForm","register","handleSubmit","errors","s","textAreaForm__row","textAreaForm__cell","onSubmit","data","postArticle","textarea","name","ref","required","maxLength","onChange","event","text","target","value","updateNewPostArticle","hide","htmlFor","inputTextLabel","displayArticlesBlock__row","displayArticlesBlock__cell","reverse","map","item","onClick","deleteArticleLabel","ArticlesContainer","connect","dispatch","deleteArticleActionCreator","POST_IMAGE","UPDATE_NEW_POST_IMAGE","DELETE_IMAGE","postImages","newPostImage","ImagesReducer","newImg","img","newImage","deleteImage","Images","inputBlock__cell","accept","e","reader","FileReader","readAsDataURL","onload","postImage","result","fileSelectedHandler","files","hide_Input","inputImageLabel","renderedImages__row","renderedImages__cell","items","src","alt","image_Item","hide_Button","deleteImageLabel","ImagesContainer","updateNewPostImage","updateImage","deleteImageActionCreator","Content","path","render","Navbar","navbar","navbar_logo","to","navbar__row","navbar__cell","navbar_item","activeClassName","activeLink","App","reducers","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","console","log","loadFromLocalStorage","store","createStore","window","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4555deb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAreaForm__cell\":\"articles_textAreaForm__cell__1oB6I\",\"displayArticlesBlock__cell\":\"articles_displayArticlesBlock__cell__3rev_\",\"textarea\":\"articles_textarea__1FIFK\",\"item\":\"articles_item__20_d6\",\"hide\":\"articles_hide__6Zy6x\",\"inputTextLabel\":\"articles_inputTextLabel__2b75G\",\"deleteArticleLabel\":\"articles_deleteArticleLabel__3W_Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock__cell\":\"images_inputBlock__cell__18A19\",\"renderedImages__cell\":\"images_renderedImages__cell__3TPOI\",\"items\":\"images_items__1ooCp\",\"image_Item\":\"images_image_Item__ewy-0\",\"deleteImageLabel\":\"images_deleteImageLabel__2hwld\",\"hide_Button\":\"images_hide_Button__2DvkF\",\"hide_Input\":\"images_hide_Input__-S_Se\",\"inputImageLabel\":\"images_inputImageLabel__2dtwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar_logo\":\"navbar_navbar_logo__3KSmR\",\"navbar__cell\":\"navbar_navbar__cell__1Z7-h\",\"navbar_item\":\"navbar_navbar_item__31IOh\",\"activeLink\":\"navbar_activeLink__bvR5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description__cell\":\"description_description__cell__15FmX\",\"underline\":\"description_underline__2yg-s\"};","import React from 'react';\r\nimport styles from './description.module.css';\r\n\r\nconst Description = () => {\r\n  return (\r\n      <div className={styles.description__row}>\r\n          <div className={styles.description__cell}>\r\n                  При создании данного WEB-приложения использовались библиотеки React, Redux, React-Redux. Место хранения данных находится в Redux-store, логика распределена в Reducer-ax, состояние сохранеятся в LocalStorage.\r\n                  <p>Архитектура приложения состоит из двух уровней UserInterface (React) и BusinessLogicLayer (Redux).</p>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Description;","const POST_ARTICLE = 'POST_ARTICLE';\r\nconst UPDATE_NEW_POST_ARTICLE = 'UPDATE_NEW_POST_ARTICLE';\r\nconst DELETE_ARTICLE = 'DELETE_ARTICLE';\r\n\r\nlet initialState = {\r\n  postArticles: [],\r\n  newPostArticle: ''\r\n};\r\n\r\nconst ArticlesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POST_ARTICLE: {\r\n      let newPost = {\r\n        id: new Date().getTime(),\r\n        article: state.newPostArticle\r\n      };\r\n      return {\r\n        ...state,\r\n        postArticles: [...state.postArticles, newPost],\r\n        newPostArticle: ''\r\n      };\r\n    }\r\n    case UPDATE_NEW_POST_ARTICLE: {\r\n      return {\r\n        ...state,\r\n        newPostArticle: action.newArticle\r\n      };\r\n    }\r\n    case DELETE_ARTICLE: {\r\n      return {\r\n        ...state,\r\n        postArticles: state.postArticles.filter(\r\n          (el) => el.id !== action.deleteArticle\r\n        )\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postArticleActionCreator = (article) => ({\r\n  type: 'POST_ARTICLE',\r\n  newPostArticle: article\r\n});\r\n\r\nexport const updateNewPostArticleActionCreator = (updateArticle) => ({\r\n  type: 'UPDATE_NEW_POST_ARTICLE',\r\n  newArticle: updateArticle\r\n});\r\n\r\nexport const deleteArticleActionCreator = (deleteArticle) => ({\r\n  type: 'DELETE_ARTICLE',\r\n  deleteArticle: deleteArticle\r\n});\r\n\r\nexport default ArticlesReducer;\r\n","import React from 'react';\r\nimport s from './articles.module.css';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nconst Articles = (props) => {\r\n\r\n  const textareaChange = (event) => {\r\n    let text = event.target.value;\r\n    props.updateNewPostArticle(text);\r\n  };\r\n\r\n  const {register, handleSubmit, errors} = useForm();\r\n  const onSubmit = (data) => {\r\n    props.postArticle(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.textAreaForm__row}>\r\n          <div className={s.textAreaForm__cell}>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                   <textarea\r\n                       className={s.textarea}\r\n                       name='textarea'\r\n                       ref={register({required: true, maxLength: 300})}\r\n                       onChange={textareaChange}\r\n                       value={props.newPostArticle}\r\n                   />\r\n                    {errors.textarea && errors.textarea.type === 'required' && (<p>Field is required</p>)}\r\n                    {errors.textarea && errors.textarea.type === 'maxLength' && (<p>Max length 300 simbols</p>)}\r\n                    <div>\r\n                       <input type='submit' value='submit' id='inputArticle' className={s.hide}/>\r\n                       <label htmlFor=\"inputArticle\" className={s.inputTextLabel}>Submit</label>\r\n                    </div>\r\n               </form>\r\n          </div>\r\n       </div>\r\n       <div className={s.displayArticlesBlock__row}>\r\n          <div className={s.displayArticlesBlock__cell}>\r\n              {\r\n                [...props.postArticles].reverse().map((el) => (\r\n                   <ul className={s.item} key={el.id}>\r\n                      <li>\r\n                          {el.article}\r\n                      </li>\r\n                      <button \r\n                             id='deleteArticle'\r\n                             className={s.hide}>Delete\r\n                      </button>\r\n                      <label htmlFor=\"deleteArticle\" onClick={() => props.deleteArticle(el.id)} className={s.deleteArticleLabel}>Delete</label>\r\n                   </ul>\r\n                 ))\r\n              }\r\n           </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  postArticleActionCreator,\r\n  updateNewPostArticleActionCreator,\r\n  deleteArticleActionCreator\r\n} from '../../../redux/reducers/articlesReducer';\r\nimport Articles from './articles';\r\n\r\nlet mapStateToPorps = (state) => {\r\n  return {\r\n    postArticles: state.Articles.postArticles,\r\n    newPostArticle: state.Articles.newPostArticle\r\n  };\r\n};\r\n\r\nlet mapDispatchToPorps = (dispatch) => {\r\n  return {\r\n    postArticle: (newPostArticle) => {\r\n      dispatch(postArticleActionCreator(newPostArticle));\r\n    },\r\n\r\n    updateNewPostArticle: (action) => {\r\n      dispatch(updateNewPostArticleActionCreator(action));\r\n    },\r\n\r\n    deleteArticle: (action) => {\r\n      dispatch(deleteArticleActionCreator(action));\r\n    }\r\n  };\r\n};\r\n\r\nconst ArticlesContainer = connect(\r\n  mapStateToPorps,\r\n  mapDispatchToPorps\r\n)(Articles);\r\n\r\nexport default ArticlesContainer;\r\n","const POST_IMAGE = 'POST_IMAGE';\r\nconst UPDATE_NEW_POST_IMAGE = 'UPDATE_NEW_POST_IMAGE';\r\nconst DELETE_IMAGE = 'DELETE_IMAGE';\r\n\r\nlet initialState = {\r\n  postImages: [],\r\n  newPostImage: ''\r\n};\r\n\r\nconst ImagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POST_IMAGE: {\r\n     let newImg = {\r\n        id: new Date().getTime(),\r\n        img: action.newPostImage\r\n      };\r\n      return {\r\n        ...state,\r\n        postImages: [...state.postImages, newImg]\r\n      };\r\n    }\r\n    case UPDATE_NEW_POST_IMAGE: {\r\n      return {\r\n        ...state,\r\n        newPostImage: action.newImage\r\n      };\r\n    }\r\n    case DELETE_IMAGE: {\r\n      return {\r\n        ...state,\r\n        postImages: state.postImages.filter((el) => el.id !== action.deleteImage)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postImageActionCreator = (image) => ({\r\n  type: 'POST_IMAGE',\r\n  newPostImage: image\r\n});\r\n\r\nexport const updateNewPostImageActionCreator = (updatedImage) => ({\r\n  type: 'UPDATE_NEW_POST_IMAGE',\r\n  newImage: updatedImage\r\n});\r\n\r\nexport const deleteImageActionCreator = (deleteImage) => ({\r\n  type: 'DELETE_IMAGE',\r\n  deleteImage: deleteImage\r\n});\r\n\r\n\r\nexport default ImagesReducer;\r\n\r\n","import React from \"react\";\r\nimport s from \"./images.module.css\";\r\n\r\nconst Images = (props) => {\r\n  const fileSelectedHandler = (e) => {\r\n    let reader = new FileReader();\r\n      reader.readAsDataURL(e[0]);\r\n      reader.onload= (e) => {\r\n      props.postImage(reader.result);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div >\r\n        <div>\r\n            <div className={s.inputBlock__cell}>\r\n            <input\r\n               id='inputImage'\r\n               type=\"file\"\r\n               accept=\"image/*\" \r\n               onChange={(e)=>fileSelectedHandler(e.target.files)}\r\n               value={props.newPostImage}\r\n               className={s.hide_Input}\r\n            />\r\n            <label htmlFor='inputImage' \r\n            className={s.inputImageLabel}\r\n            >Upload file</label>\r\n        </div>\r\n        </div> \r\n       <div className={s.renderedImages__row}>\r\n           <div className={s.renderedImages__cell}>\r\n          {  \r\n           [...props.postImages].reverse().map((el) => (\r\n            <ul key={el.id} className={s.items}>\r\n              <img src={el.img} alt=\"\" className={s.image_Item}/>\r\n              <button id='button' className={s.hide_Button}></button>\r\n              <label htmlFor='button' onClick={() => props.deleteImage(el.id)} className={s.deleteImageLabel}>delete</label>\r\n            </ul>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  deleteImageActionCreator,\r\n  postImageActionCreator,\r\n  updateNewPostImageActionCreator\r\n} from '../../../redux/reducers/imagesReducer';\r\nimport Images from './images';\r\n\r\nlet mapStateToPorps = (state) => {\r\n  return {\r\n    postImages: state.Images.postImages,\r\n    newPostImage: state.Images.newPostImage\r\n  };\r\n};\r\n\r\nlet mapDispatchToPorps = (dispatch) => {\r\n  return {\r\n    postImage: (newPostImage) => {\r\n      dispatch(postImageActionCreator(newPostImage));\r\n    },\r\n    updateNewPostImage: (updateImage) => {\r\n      dispatch(updateNewPostImageActionCreator(updateImage));\r\n    },\r\n    deleteImage: (deleteImage) => {\r\n      dispatch(deleteImageActionCreator(deleteImage));\r\n    }\r\n  };\r\n};\r\n\r\nconst ImagesContainer = connect(mapStateToPorps, mapDispatchToPorps)(Images);\r\n\r\nexport default ImagesContainer;\r\n\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Description from \"../../description/description\";\r\nimport ArticlesContainer from \"./articles/articlesContainer\";\r\nimport ImagesContainer from \"./images/imagesContainer\";\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n      <Route\r\n        path=\"/articles\" \r\n        render={() => ( \r\n        <ArticlesContainer />\r\n        )} \r\n      />\r\n      <Route\r\n        path=\"/images\"\r\n        render={() => (\r\n          <ImagesContainer />\r\n        )}\r\n      /> \r\n      <Route \r\n        path='*' \r\n        render={ () => (\r\n          <Description />\r\n          )} \r\n      /> \r\n      </Switch>\r\n    </div>   \r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Articles from \"./articles/articles\";\r\nimport Images from \"./images/images\";\r\nimport Videos from \"./videos/videos\";\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div>\r\n      <Route\r\n        path=\"/articles\"\r\n        render={() => (\r\n          <Articles\r\n            state={props.state}\r\n            Articles={props.state.Articles}\r\n            postArticle={props.postArticle}\r\n            updateNewPostArticle={props.updateNewPostArticle}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path=\"/images\"\r\n        render={() => (\r\n          <Images\r\n            state={props.state}\r\n            Images={props.state.Images}\r\n            postImage={props.postImage}\r\n            updateNewPostImage={props.updateNewPostImage}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path=\"/videos\"\r\n        render={() => (\r\n          <Videos\r\n            state={props.state}\r\n            Videos={props.state.Videos}\r\n            postVideo={props.postVideo}\r\n            updateNewPostVideo={props.updateNewPostVideo}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n*/\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className={s.navbar}>\r\n        <div className={s.navbar_logo}>\r\n                    <NavLink to=\"/description\">\r\n                                Home       \r\n                    </NavLink>             \r\n        </div>\r\n        <div className={s.navbar__row}>\r\n            <div className={s.navbar__cell}>\r\n                <div className={s.navbar_item}>\r\n                    <NavLink to=\"/articles\" activeClassName={s.activeLink}>\r\n                                 articles\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.navbar_item}>\r\n                    <NavLink to=\"/images\" activeClassName={s.activeLink}>\r\n                                 images\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n/*\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className={s.navbar_cell}>\r\n      <div className={s.navbar_item}>\r\n        <NavLink to=\"/articles\" activeClassName={s.activeLink}>\r\n          articles\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.navbar_item}>\r\n        <NavLink to=\"/images\" activeClassName={s.activeLink}>\r\n          images\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.navbar_item}>\r\n        <NavLink to=\"/videos\" activeClassName={s.activeLink}>\r\n          videos\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n */\r\n","import React from \"react\";\nimport Content from \"./components/ui/content/content\";\nimport Navbar from \"./components/ui/navbar/navbar\";\nimport './App.css';\n\nconst App = (props) => {\n  return (\n    <div>\n      <Navbar />\n      <Content />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\r\nimport ArticlesReducer from \"./reducers/articlesReducer\";\r\nimport ImagesReducer from \"./reducers/imagesReducer\";\r\n\r\nconst saveToLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nlet reducers = combineReducers({\r\n  Articles: ArticlesReducer,\r\n  Images: ImagesReducer\r\n});\r\n\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nlet store = createStore( \r\n  reducers,\r\n  persistedState\r\n   );\r\nwindow.store = store;\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./components/redux/redux-store\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}